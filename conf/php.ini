[PHP]

; This is a php.ini somewhat optimized for the php-joern parser. Since
; the parser uses the CLI SAPI (and not the CGI SAPI), only a subset
; of the options normally used in php.ini need to be set: Many of
; these options do not make sense in shell environments. Also see
; http://php.net/manual/en/features.commandline.differences.php

;;;;;;;;;;;;;;;;;;;;
; Language Options ;
;;;;;;;;;;;;;;;;;;;;

; We want to enable short_open_tag, since otherwise projects that use
; it will get parsed incorrectly, or may even throw parse errors, such
; as for example test-repos/limonade/examples/example06/index.php
; http://php.net/short-open-tag
short_open_tag = On

; Since our parser opens a lot of files, the realpath cache should be
; set to a very high value for best performance.  4M seems to be
; enough when parsing 30 projects with an average number of 2000 files
; each.
; http://php.net/realpath-cache-size 
realpath_cache_size = 4M

; We can set the cache ttl very high, so that the realpath never runs
; into a time out in any single run of the parser.
; http://php.net/realpath-cache-ttl
realpath_cache_ttl = 3600

;;;;;;;;;;;;;;;;;;;
; Resource Limits ;
;;;;;;;;;;;;;;;;;;;

; We do not want to limit the maximum amount of memory that our parser
; may use
; http://php.net/memory-limit
memory_limit = -1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Error handling and logging ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; By default, report on all kinds of errors.
; http://php.net/error-reporting
error_reporting = E_ALL

; Any errors reported by PHP should be immediately printed to stderr
; http://php.net/display-errors
display_errors = stderr

; We also want to display any startup errors -- potentially useful for
; development and debugging
; http://php.net/display-startup-errors
display_startup_errors = On

; Additionally to printing errors to stderr, we also log them...
; http://php.net/log-errors
log_errors = On

; And we simply log them in the current working directory, in a file
; called php_errors.log
; http://php.net/error-log
; EDIT: disabled for now, otherwise error_log() does not print to stderr, only to the given file
; TODO figure this out
; error_log = php_errors.log

; No maximum length for errors
; http://php.net/log-errors-max-len
log_errors_max_len = 0

; Do log repeated errors
; http://php.net/ignore-repeated-errors
ignore_repeated_errors = Off

; Same for repeated errors from different sources (files, lines)
; http://php.net/ignore-repeated-source
ignore_repeated_source = Off

; Do report on memleaks Note that this only has an effect in a debug
; build, and if E_WARNING is included in error_reporting
; http://php.net/report-memleaks
report_memleaks = On

; Store the last error/warning message in $php_errormsg (boolean).
; http://php.net/track-errors
track_errors = On

;;;;;;;;;;;;;;;;;;;
; Module Settings ;
;;;;;;;;;;;;;;;;;;;

[Date]

; Defines the default timezone used by the date functions
; http://php.net/date.timezone
date.timezone = Europe/Berlin

[opcache]

; Tell PHP to load the OPcache extension when starting up
; http://php.net/manual/en/ini.core.php#ini.zend-extension
; http://php.net/manual/en/book.opcache.php
zend_extension=opcache.so

; Enable opcache for better performance
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.enable-cli
opcache.enable_cli = On

; In the following, we set the recommended settings for OPcache. This
; can certainly be improved; for now I more or less took the settings
; suggested at http://php.net/manual/en/opcache.installation.php

; The size of the shared memory storage used by OPcache, in megabytes.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.memory-consumption
opcache.memory_consumption = 128

; The amount of memory used to store interned strings, in megabytes.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.interned-strings-buffer
opcache.interned_strings_buffer = 8

; The maximum number of keys (and therefore scripts) in the OPcache hash table.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.max-accelerated-files
opcache.max_accelerated_files = 4000

; The maximum percentage of wasted memory that is allowed before a restart is scheduled.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.max-wasted-percentage
opcache.max_wasted_percentage = 5

; If enabled, OPcache appends the current working directory to the
; script key, thereby eliminating possible collisions between files
; with the same base name.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.use-cwd
opcache.use_cwd = On

; If enabled, OPcache will check for updated scripts every opcache.revalidate_freq seconds.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.validate-timestamps
opcache.validate_timestamps = On

; How often to check script timestamps for updates, in seconds.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.revalidate-freq
opcache.revalidate_freq = 60

; If disabled, existing cached files using the same include_path will
; be reused. Thus, if a file with the same name is elsewhere in the
; include_path, it won't be found.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.revalidate-path
opcache.revalidate_path = Off

; If disabled, all documentation comments will be discarded from the
; opcode cache to reduce the size of the optimised code.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.save-comments
opcache.save_comments = Off

; If disabled, documentation comments won't be loaded from the opcode
; cache even if they exist.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.load-comments
opcache.load_comments = Off

; If enabled, a fast shutdown sequence is used that doesn't free each
; allocated block, but relies on the Zend Engine memory manager to
; deallocate the entire set of request variables en masse.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.fast-shutdown
opcache.fast_shutdown = On

; When enabled, the opcode cache will be checked for whether a file
; has already been cached when file_exists(), is_file() and
; is_readable() are called.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.enable-file-override
opcache.enable_file_override = On

; The maximum file size that will be cached, in bytes. If this is 0,
; all files will be cached.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.max-file-size
opcache.max_file_size = 0

; If non-zero, OPcache will verify the cache checksum every N
; requests, where N is the value of this configuration directive.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.consistency-checks
opcache.consistency_checks = 0

; The error log for OPcache errors.
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.error-log
opcache.error_log = stderr

; The log verbosity level. By default, only fatal errors (level 0) and
; errors (level 1) are logged. Other levels available are warnings
; (level 2), information messages (level 3) and debug messages (level 4).
; http://php.net/manual/en/opcache.configuration.php#ini.opcache.log-verbosity-level
opcache.log_verbosity_level = 2

